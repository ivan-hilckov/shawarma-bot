#!/bin/bash

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å–±–æ—Ä–∫–∏ Docker"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo ""
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:"
echo "src/api/server.ts: $(test -f src/api/server.ts && echo "‚úÖ –Ω–∞–π–¥–µ–Ω" || echo "‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω")"
echo "tsconfig.json: $(test -f tsconfig.json && echo "‚úÖ –Ω–∞–π–¥–µ–Ω" || echo "‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω")"
echo "package.json: $(test -f package.json && echo "‚úÖ –Ω–∞–π–¥–µ–Ω" || echo "‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω")"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ
echo ""
echo "üî® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏ TypeScript:"
if npm run build; then
    echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
    echo "–§–∞–π–ª—ã –≤ dist/:"
    ls -la dist/ 2>/dev/null || echo "dist/ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–§–∞–π–ª—ã –≤ dist/api/:"
    ls -la dist/api/ 2>/dev/null || echo "dist/api/ –Ω–µ –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏"
fi

# –û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
rm -rf dist/

echo ""
echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π:"
docker build --no-cache -t shawarma-bot-debug .

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞:"
docker run --rm shawarma-bot-debug sh -c "
echo '=== –°–æ–¥–µ—Ä–∂–∏–º–æ–µ /app ==='
ls -la /app/

echo '=== –°–æ–¥–µ—Ä–∂–∏–º–æ–µ /app/dist ==='
ls -la /app/dist/ 2>/dev/null || echo 'dist –Ω–µ –Ω–∞–π–¥–µ–Ω'

echo '=== –°–æ–¥–µ—Ä–∂–∏–º–æ–µ /app/dist/api ==='
ls -la /app/dist/api/ 2>/dev/null || echo 'dist/api –Ω–µ –Ω–∞–π–¥–µ–Ω'

echo '=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ ==='
test -f /app/dist/api/server.js && echo 'server.js –Ω–∞–π–¥–µ–Ω' || echo 'server.js –ù–ï –Ω–∞–π–¥–µ–Ω'
test -f /app/dist/bot.js && echo 'bot.js –Ω–∞–π–¥–µ–Ω' || echo 'bot.js –ù–ï –Ω–∞–π–¥–µ–Ω'
"

echo ""
echo "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
