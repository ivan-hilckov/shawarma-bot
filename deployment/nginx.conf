user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # Upstream –¥–ª—è API —Å–µ—Ä–≤–∏—Å–∞
    upstream shawarma_api {
        server localhost:3000;
        keepalive 32;
    }

    # –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
    server {
        listen 80;
        server_name botcraft.tech botgarden.shop botgarden.store botgarden.tech botgrover.fun botgrover.ru;

        # –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Swagger UI - —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        location /api/docs {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://shawarma_api/api/docs;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # –¢–∞–π–º–∞—É—Ç—ã
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # –í–∞–∂–Ω–æ –¥–ª—è Swagger UI - —É–±–∏—Ä–∞–µ–º —Å–ª—ç—à –≤ –∫–æ–Ω—Ü–µ
            proxy_redirect off;

            # CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è Swagger UI
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
        }

        # API —Ä–æ—É—Ç—ã (–¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ –ø–æ—Å–ª–µ /api/docs —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å)
        location /api/ {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://shawarma_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # –¢–∞–π–º–∞—É—Ç—ã
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è API
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }
        }

        # Health check endpoint
        location /health {
            limit_req zone=general burst=10 nodelay;
            proxy_pass http://shawarma_api/api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è)
        location /static/ {
            alias /var/www/shawarma-bot/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –ø—Ä–æ—Å—Ç–∞—è –∑–∞–≥–ª—É—à–∫–∞
        location / {
            limit_req zone=general burst=20 nodelay;
            return 200 'üåØ Shawarma Bot API Server\nAPI Documentation: /api/docs\nHealth Check: /health';
            add_header Content-Type text/plain;
        }

        # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–ª—É–∂–µ–±–Ω—ã–º —Ñ–∞–π–ª–∞–º
        location ~ /\. {
            deny all;
        }

        location ~ ^/(\.env|docker-compose\.yml|Dockerfile|package\.json)$ {
            deny all;
        }
    }

    # SSL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å Let's Encrypt)
    # server {
    #     listen 443 ssl http2;
    #     server_name botcraft.tech botgarden.shop botgarden.store botgarden.tech botgrover.fun botgrover.ru;
    #
    #     ssl_certificate /etc/letsencrypt/live/botgarden.store/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/botgarden.store/privkey.pem;
    #
    #     # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # –í–∫–ª—é—á–∏—Ç—å –≤—Å–µ –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ HTTP –±–ª–æ–∫–∞
    #     include /etc/nginx/conf.d/shawarma-locations.conf;
    # }
}