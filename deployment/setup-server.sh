#!/bin/bash
set -e

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –®–∞—É—Ä–º–∞ –ë–æ—Ç–∞..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ sudo
if ! sudo -n true 2>/dev/null; then
    echo "‚ùå –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ sudo –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p ~/shawarma-bot/backups
mkdir -p ~/shawarma-bot/logs

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v docker &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    rm get-docker.sh
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v docker-compose &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
    sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–µ–π –¥–ª—è GitHub
echo "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–µ–π –¥–ª—è GitHub..."
if [ ! -f ~/.ssh/id_ed25519 ]; then
    echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–∞..."
    ssh-keygen -t ed25519 -C "server@shawarma-bot" -f ~/.ssh/id_ed25519 -N ""
    echo "‚úÖ SSH –∫–ª—é—á —Å–æ–∑–¥–∞–Ω"

    echo ""
    echo "üîë –í–ê–ñ–ù–û: –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ GitHub:"
    echo "=========================================="
    cat ~/.ssh/id_ed25519.pub
    echo "=========================================="
    echo ""
    echo "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:"
    echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –≤—ã—à–µ"
    echo "2. –ò–¥–∏—Ç–µ –≤ GitHub ‚Üí Settings ‚Üí SSH and GPG keys"
    echo "3. –ù–∞–∂–º–∏—Ç–µ 'New SSH key'"
    echo "4. –í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –∏ –¥–∞–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ 'Shawarma Bot Server'"
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞ –≤ GitHub..."

    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub..."
    if ssh -T git@github.com 2>&1 | grep -q "successfully authenticated"; then
        echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ GitHub"
        echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω –≤ GitHub"
    fi
else
    echo "‚úÖ SSH –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
if [ ! -d "~/shawarma-bot/.git" ]; then
    echo "üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."

    # –ü–æ–ø—Ä–æ–±—É–µ–º SSH —Å–Ω–∞—á–∞–ª–∞
    if ssh -T git@github.com 2>&1 | grep -q "successfully authenticated"; then
        echo "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ SSH..."
        git clone git@github.com:ivan-hilckov/shawarma-bot.git ~/shawarma-bot
    else
        echo "SSH –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ HTTPS..."
        read -p "–í–≤–µ–¥–∏—Ç–µ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (HTTPS): " REPO_URL
        git clone $REPO_URL ~/shawarma-bot
    fi

    echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
else
    echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

cd ~/shawarma-bot

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ docker.env.example
    if [ -f "docker.env.example" ]; then
        cp docker.env.example .env
        echo "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω docker.env.example –∫–∞–∫ –æ—Å–Ω–æ–≤–∞"
    else
        echo "‚ö†Ô∏è docker.env.example –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env"
        cat > .env << 'EOF'
# Telegram Bot Configuration
BOT_TOKEN=YOUR_BOT_TOKEN_HERE

# Environment
NODE_ENV=production

# Database Configuration (–¥–ª—è Docker)
DATABASE_URL=postgresql://shawarma_user:shawarma_pass@postgres:5432/shawarma_db

# PostgreSQL Configuration
POSTGRES_DB=shawarma_db
POSTGRES_USER=shawarma_user
POSTGRES_PASSWORD=shawarma_pass

# Redis Configuration
REDIS_URL=redis://redis:6379

# pgAdmin Configuration
PGADMIN_DEFAULT_EMAIL=admin@example.com
PGADMIN_DEFAULT_PASSWORD=admin123
EOF
    fi

    # –ó–∞–ø—Ä–æ—Å —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
    read -p "–í–≤–µ–¥–∏—Ç–µ BOT_TOKEN: " BOT_TOKEN
    sed -i "s/YOUR_BOT_TOKEN_HERE/$BOT_TOKEN/" .env

    # –ó–∞–ø—Ä–æ—Å ID –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    read -p "–í–≤–µ–¥–∏—Ç–µ NOTIFICATIONS_CHAT_ID (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): " NOTIFICATIONS_CHAT_ID
    if [ ! -z "$NOTIFICATIONS_CHAT_ID" ]; then
        if grep -q "# NOTIFICATIONS_CHAT_ID=" .env; then
            sed -i "s/# NOTIFICATIONS_CHAT_ID=/NOTIFICATIONS_CHAT_ID=$NOTIFICATIONS_CHAT_ID/" .env
        else
            echo "NOTIFICATIONS_CHAT_ID=$NOTIFICATIONS_CHAT_ID" >> .env
        fi
    fi

    # –ó–∞–ø—Ä–æ—Å ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    read -p "–í–≤–µ–¥–∏—Ç–µ ADMIN_USER_IDS —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): " ADMIN_USER_IDS
    if [ ! -z "$ADMIN_USER_IDS" ]; then
        if grep -q "# ADMIN_USER_IDS=" .env; then
            sed -i "s/# ADMIN_USER_IDS=/ADMIN_USER_IDS=$ADMIN_USER_IDS/" .env
        else
            echo "ADMIN_USER_IDS=$ADMIN_USER_IDS" >> .env
        fi
    fi

    echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
if [ ! -d "assets" ] || [ ! -f "assets/XXL.jpeg" ]; then
    echo "‚ö†Ô∏è –ü–∞–ø–∫–∞ assets –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç–∞"
    echo "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:"
    echo "1. scp -r assets/ user@server:~/shawarma-bot/"
    echo "2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤: tar -xzf assets-backup.tar.gz"
    echo "3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é –≤ –ø–∞–ø–∫—É assets/"
else
    echo "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã ($(ls assets/*.jpeg 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤)"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±—ç–∫–∞–ø–∞
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±—ç–∫–∞–ø–∞..."
cat > backup-script.sh << 'EOF'
#!/bin/bash
BACKUP_DIR="$HOME/shawarma-bot/backups"
DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="shawarma_db_backup_${DATE}.sql"

mkdir -p $BACKUP_DIR

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
docker exec shawarma-postgres pg_dump -U shawarma_user shawarma_db > "$BACKUP_DIR/$BACKUP_FILE"

# –°–∂–∞—Ç–∏–µ –±—ç–∫–∞–ø–∞
gzip "$BACKUP_DIR/$BACKUP_FILE"

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
find $BACKUP_DIR -name "*.sql.gz" -mtime +7 -delete

echo "‚úÖ Backup created: $BACKUP_FILE.gz"
EOF

chmod +x backup-script.sh
echo "‚úÖ –°–∫—Ä–∏–ø—Ç –±—ç–∫–∞–ø–∞ —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
cat > health-check.sh << 'EOF'
#!/bin/bash

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –®–∞—É—Ä–º–∞ –ë–æ—Ç–∞..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üì¶ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
echo "üóÑÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
docker exec shawarma-postgres psql -U shawarma_user -d shawarma_db -c "
SELECT
  'Categories: ' || COUNT(*) FROM categories
UNION ALL
SELECT
  'Menu items: ' || COUNT(*) FROM menu_items
UNION ALL
SELECT
  'Orders: ' || COUNT(*) FROM orders
UNION ALL
SELECT
  'Users: ' || COUNT(*) FROM users;
" 2>/dev/null || echo "‚ùå –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
echo "üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:"
if [ -d "assets" ]; then
    echo "–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $(ls assets/*.jpeg 2>/dev/null | wc -l)"
    ls -la assets/ 2>/dev/null || echo "–ü–∞–ø–∫–∞ assets –ø—É—Å—Ç–∞"
else
    echo "‚ùå –ü–∞–ø–∫–∞ assets –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞:"
docker-compose logs --tail=10 bot 2>/dev/null || echo "‚ùå –õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
EOF

chmod +x health-check.sh
echo "‚úÖ –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–∑–¥–∞–Ω"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –±—ç–∫–∞–ø–æ–≤
echo "‚è∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –±—ç–∫–∞–ø–æ–≤..."
(crontab -l 2>/dev/null; echo "0 */6 * * * $HOME/shawarma-bot/backup-script.sh >> $HOME/shawarma-bot/logs/backup.log 2>&1") | crontab -
echo "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –±—ç–∫–∞–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤)"

echo ""
echo "üéâ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª: nano .env"
echo "2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫—É assets/ (–µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã)"
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: docker-compose up -d"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ./health-check.sh"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "- –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f bot"
echo "- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart bot"
echo "- –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "- –ë—ç–∫–∞–ø: ./backup-script.sh"
echo "- –ü—Ä–æ–≤–µ—Ä–∫–∞: ./health-check.sh"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è Docker
if groups $USER | grep -q docker; then
    echo "‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!"
else
    echo "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ Docker"
    echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: newgrp docker –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É"
fi
