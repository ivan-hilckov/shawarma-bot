#!/bin/bash

echo "üîß –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–±–æ—Ä–∫–∏"
echo "====================================="

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down

# –ë—ã—Å—Ç—Ä–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ç–æ–ª—å–∫–æ –æ–±—Ä–∞–∑–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ (–≤–º–µ—Å—Ç–æ –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Å–∏—Å—Ç–µ–º—ã)
echo "üßπ –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
docker rmi $(docker images | grep shawarma | awk '{print $3}') 2>/dev/null || echo "–ù–µ—Ç —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:"
test -f src/api/server.ts && echo "‚úÖ src/api/server.ts –Ω–∞–π–¥–µ–Ω" || echo "‚ùå src/api/server.ts –ù–ï –Ω–∞–π–¥–µ–Ω"
test -f tsconfig.json && echo "‚úÖ tsconfig.json –Ω–∞–π–¥–µ–Ω" || echo "‚ùå tsconfig.json –ù–ï –Ω–∞–π–¥–µ–Ω"
test -f package.json && echo "‚úÖ package.json –Ω–∞–π–¥–µ–Ω" || echo "‚ùå package.json –ù–ï –Ω–∞–π–¥–µ–Ω"

# –û—á–∏—Å—Ç–∫–∞ node_modules –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞
echo "üì¶ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
rm -rf node_modules package-lock.json dist/
npm cache clean --force
npm install

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏
echo "üî® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏..."
if npm run build; then
    echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
    echo "–§–∞–π–ª—ã –≤ dist/:"
    ls -la dist/
    echo "–§–∞–π–ª—ã –≤ dist/api/:"
    ls -la dist/api/
    rm -rf dist/
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ"
    exit 1
fi

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
echo "üê≥ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker-compose build --no-cache

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (—Å–æ–∫—Ä–∞—â–µ–Ω–æ —Å 20 –¥–æ 15 —Å–µ–∫—É–Ω–¥)
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ API
echo "üìã –õ–æ–≥–∏ API —Å–µ—Ä–≤–µ—Ä–∞:"
docker-compose logs --tail=10 api

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ API –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
if docker-compose ps | grep -q "shawarma-api.*Up"; then
    echo "‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"

    # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint..."
    sleep 5
    if curl -s http://localhost:3000/api/health > /dev/null; then
        echo "‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
    else
        echo "‚ö†Ô∏è API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
    fi
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º API —Å–µ—Ä–≤–µ—Ä–∞"
    echo "–î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏:"
    docker-compose logs api
fi

echo ""
echo "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API: curl http://localhost:3000/api/health"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Swagger: http://localhost:3000/api/docs"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs -f api"
