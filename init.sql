-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –®–∞—É—Ä–º–∞ –ë–æ—Ç–∞

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE IF NOT EXISTS users (
    id BIGINT PRIMARY KEY,
    username VARCHAR(255),
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–µ–Ω—é
CREATE TABLE IF NOT EXISTS categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    emoji VARCHAR(10),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
CREATE TABLE IF NOT EXISTS menu_items (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10,2) NOT NULL,
    category_id INTEGER REFERENCES categories(id),
    image_url VARCHAR(500),
    is_available BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤
CREATE TABLE IF NOT EXISTS orders (
    id SERIAL PRIMARY KEY,
    user_id BIGINT REFERENCES users(id),
    status VARCHAR(50) DEFAULT 'pending',
    total_price DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫–∞–∑–∞
CREATE TABLE IF NOT EXISTS order_items (
    id SERIAL PRIMARY KEY,
    order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,
    menu_item_id INTEGER REFERENCES menu_items(id),
    quantity INTEGER NOT NULL DEFAULT 1,
    price DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫–æ—Ä–∑–∏–Ω—ã
CREATE TABLE IF NOT EXISTS cart_items (
    id SERIAL PRIMARY KEY,
    user_id BIGINT REFERENCES users(id),
    menu_item_id INTEGER REFERENCES menu_items(id),
    quantity INTEGER NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(user_id, menu_item_id)
);



-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE IF NOT EXISTS user_analytics (
    id SERIAL PRIMARY KEY,
    user_id BIGINT REFERENCES users(id),
    menu_item_id INTEGER REFERENCES menu_items(id),
    order_count INTEGER DEFAULT 1,
    last_ordered TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total_spent DECIMAL(10,2) DEFAULT 0.00,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(user_id, menu_item_id)
);

-- –°–æ–∑–¥–∞–Ω–∏–µ view –¥–ª—è —á–∞—Å—Ç–æ –∑–∞–∫–∞–∑—ã–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
CREATE OR REPLACE VIEW user_popular_items AS
SELECT
    ua.user_id,
    ua.menu_item_id,
    mi.name,
    mi.price,
    mi.category_id,
    ua.order_count,
    ua.total_spent,
    ua.last_ordered,
    CASE
        WHEN ua.order_count >= 3 THEN 'frequent'
        WHEN ua.order_count = 2 THEN 'regular'
        ELSE 'occasional'
    END as frequency_level
FROM user_analytics ua
JOIN menu_items mi ON ua.menu_item_id = mi.id
WHERE mi.is_available = true
ORDER BY ua.user_id, ua.order_count DESC, ua.last_ordered DESC;

-- –í—Å—Ç–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
INSERT INTO categories (name, description, emoji) VALUES
    ('shawarma', '–í–∫—É—Å–Ω–∞—è —à–∞—É—Ä–º–∞', 'üåØ'),
    ('drinks', '–û—Å–≤–µ–∂–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏', 'ü•§')
ON CONFLICT (name) DO NOTHING;

INSERT INTO menu_items (name, description, price, category_id) VALUES
    ('–®–∞—É—Ä–º–∞ –í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è –±–æ–ª—å—à–∞—è', '–ë–æ–ª—å—à–∞—è –ø–æ—Ä—Ü–∏—è –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–π —à–∞—É—Ä–º—ã', 270.00, 1),
    ('–®–∞—É—Ä–º–∞ –í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç', '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ—Ä—Ü–∏—è –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–π —à–∞—É—Ä–º—ã', 220.00, 1),
    ('–®–∞—É—Ä–º–∞ –∫–ª–∞—Å—Å–∏–∫ –¥–≤–æ–π–Ω–∞—è', '–î–≤–æ–π–Ω–∞—è –ø–æ—Ä—Ü–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π —à–∞—É—Ä–º—ã', 350.00, 1),
    ('–®–∞—É—Ä–º–∞ –∫–ª–∞—Å—Å–∏–∫ –±–æ–ª—å—à–∞—è', '–ë–æ–ª—å—à–∞—è –ø–æ—Ä—Ü–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π —à–∞—É—Ä–º—ã', 270.00, 1),
    ('–®–∞—É—Ä–º–∞ –∫–ª–∞—Å—Å–∏–∫ –º–∞–ª–µ–Ω—å–∫–∞—è', '–ú–∞–ª–µ–Ω—å–∫–∞—è –ø–æ—Ä—Ü–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π —à–∞—É—Ä–º—ã', 220.00, 1),
    ('–®–∞—É—Ä–º–∞ –≤ —Å—ã—Ä–Ω–æ–º –ª–∞–≤–∞—à–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç', '–®–∞—É—Ä–º–∞ –≤ –∞—Ä–æ–º–∞—Ç–Ω–æ–º —Å—ã—Ä–Ω–æ–º –ª–∞–≤–∞—à–µ', 230.00, 1),
    ('–®–∞—É—Ä–º–∞ –≤ —Å—ã—Ä–Ω–æ–º –ª–∞–≤–∞—à–µ –±–æ–ª—å—à–∞—è', '–ë–æ–ª—å—à–∞—è —à–∞—É—Ä–º–∞ –≤ —Å—ã—Ä–Ω–æ–º –ª–∞–≤–∞—à–µ', 280.00, 1),
    ('–¶–µ–∑–∞—Ä—å-–†–æ–ª–ª –±–æ–ª—å—à–æ–π', '–ë–æ–ª—å—à–æ–π —Ä–æ–ª–ª —Å –∫—É—Ä–∏—Ü–µ–π –¶–µ–∑–∞—Ä—å', 300.00, 1),
    ('–¶–µ–∑–∞—Ä—å-–†–æ–ª–ª —Å—Ç–∞–Ω–¥–∞—Ä—Ç', '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–æ–ª–ª —Å –∫—É—Ä–∏—Ü–µ–π –¶–µ–∑–∞—Ä—å', 250.00, 1),
    ('–•–æ—Ç-–î–æ–≥ —Å —Å–æ—Å–∏—Å–∫–æ–π', '–í –ª–∞–≤–∞—à–µ –∏–ª–∏ –≤ –±—É–ª–æ—á–∫–µ', 190.00, 1),
    ('–•–æ—Ç-–î–æ–≥ —Å –∫—É—Ä–∏—Ü–µ–π', '–•–æ—Ç-–¥–æ–≥ —Å –Ω–µ–∂–Ω–æ–π –∫—É—Ä–∏—Ü–µ–π', 220.00, 1),
    ('–ì–∏—Ä–æ—Å', '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –≥—Ä–µ—á–µ—Å–∫–∏–π –≥–∏—Ä–æ—Å', 275.00, 1),
    ('–ö–æ–ª–∞', '330 –º–ª', 100.00, 2),
    ('–°–æ–∫ –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π', '250 –º–ª', 120.00, 2),
    ('–í–æ–¥–∞', '500 –º–ª', 60.00, 2)
ON CONFLICT DO NOTHING;

-- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_orders_user_id ON orders(user_id);
CREATE INDEX IF NOT EXISTS idx_orders_status ON orders(status);
CREATE INDEX IF NOT EXISTS idx_order_items_order_id ON order_items(order_id);
CREATE INDEX IF NOT EXISTS idx_cart_items_user_id ON cart_items(user_id);
CREATE INDEX IF NOT EXISTS idx_menu_items_category_id ON menu_items(category_id);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü
CREATE INDEX IF NOT EXISTS idx_user_analytics_user_id ON user_analytics(user_id);
CREATE INDEX IF NOT EXISTS idx_user_analytics_menu_item_id ON user_analytics(menu_item_id);
CREATE INDEX IF NOT EXISTS idx_user_analytics_order_count ON user_analytics(order_count DESC);
CREATE INDEX IF NOT EXISTS idx_user_analytics_last_ordered ON user_analytics(last_ordered DESC);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE TRIGGER update_users_updated_at BEFORE UPDATE ON users
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_menu_items_updated_at BEFORE UPDATE ON menu_items
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_orders_updated_at BEFORE UPDATE ON orders
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_cart_items_updated_at BEFORE UPDATE ON cart_items
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_user_analytics_updated_at BEFORE UPDATE ON user_analytics
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤
CREATE OR REPLACE FUNCTION update_user_analytics()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO user_analytics (user_id, menu_item_id, order_count, last_ordered, total_spent)
    SELECT
        NEW.user_id,
        oi.menu_item_id,
        1,
        NEW.created_at,
        oi.price * oi.quantity
    FROM order_items oi
    WHERE oi.order_id = NEW.id
    ON CONFLICT (user_id, menu_item_id)
    DO UPDATE SET
        order_count = user_analytics.order_count + 1,
        last_ordered = NEW.created_at,
        total_spent = user_analytics.total_spent + EXCLUDED.total_spent,
        updated_at = CURRENT_TIMESTAMP;

    RETURN NEW;
END;
$$ language 'plpgsql';

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
CREATE TRIGGER update_analytics_on_order_creation
    AFTER INSERT ON orders
    FOR EACH ROW EXECUTE FUNCTION update_user_analytics();
