#!/bin/bash
set -e

echo "üîÑ –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–∞–º–∏"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
check_ssh() {
    local user=$1
    local host=$2
    if ! ssh -o ConnectTimeout=10 -o BatchMode=yes $user@$host exit 2>/dev/null; then
        echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ $user@$host"
        return 1
    fi
    return 0
}

# –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ä–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
echo "üì§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—Å—Ç–∞—Ä—ã–π —Å–µ—Ä–≤–µ—Ä):"
read -p "–ê–¥—Ä–µ—Å —Å—Ç–∞—Ä–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: " OLD_SERVER_HOST
read -p "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç–∞—Ä–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: " OLD_SERVER_USER
read -p "–ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –Ω–∞ —Å—Ç–∞—Ä–æ–º —Å–µ—Ä–≤–µ—Ä–µ [~/shawarma-bot]: " OLD_SERVER_PATH
OLD_SERVER_PATH=${OLD_SERVER_PATH:-~/shawarma-bot}

echo ""
echo "üì• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä):"
read -p "–ê–¥—Ä–µ—Å –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: " NEW_SERVER_HOST
read -p "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: " NEW_SERVER_USER
read -p "–ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –Ω–∞ –Ω–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ [~/shawarma-bot]: " NEW_SERVER_PATH
NEW_SERVER_PATH=${NEW_SERVER_PATH:-~/shawarma-bot}

echo ""
echo "üîç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–∏–≥—Ä–∞—Ü–∏–∏:"
echo "–ò—Å—Ç–æ—á–Ω–∏–∫: $OLD_SERVER_USER@$OLD_SERVER_HOST:$OLD_SERVER_PATH"
echo "–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: $NEW_SERVER_USER@$NEW_SERVER_HOST:$NEW_SERVER_PATH"
echo ""

read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é? (y/N): " CONFIRM
if [[ ! $CONFIRM =~ ^[Yy]$ ]]; then
    echo "‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π..."
if ! check_ssh $OLD_SERVER_USER $OLD_SERVER_HOST; then
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å—Ç–∞—Ä–æ–º—É —Å–µ—Ä–≤–µ—Ä—É"
    exit 1
fi

if ! check_ssh $NEW_SERVER_USER $NEW_SERVER_HOST; then
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –Ω–æ–≤–æ–º—É —Å–µ—Ä–≤–µ—Ä—É"
    exit 1
fi

echo "‚úÖ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
TEMP_DIR="/tmp/shawarma-migration-$(date +%Y%m%d_%H%M%S)"
mkdir -p $TEMP_DIR
echo "üìÅ –°–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $TEMP_DIR"

# –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö —Å–æ —Å—Ç–∞—Ä–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
echo "üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö —Å–æ —Å—Ç–∞—Ä–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞..."

# –≠–∫—Å–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –≠–∫—Å–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
ssh $OLD_SERVER_USER@$OLD_SERVER_HOST << EOF
cd $OLD_SERVER_PATH

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ë–î –∑–∞–ø—É—â–µ–Ω
if ! docker-compose ps | grep -q "postgres.*Up"; then
    echo "‚ùå PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ —Å—Ç–∞—Ä–æ–º —Å–µ—Ä–≤–µ—Ä–µ"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ë–î
echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker exec shawarma-postgres pg_dump -U shawarma_user shawarma_db > migration_db_export.sql

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –±—ç–∫–∞–ø–∞
DB_SIZE=\$(du -h migration_db_export.sql | cut -f1)
echo "‚úÖ –ë—ç–∫–∞–ø –ë–î —Å–æ–∑–¥–∞–Ω: \$DB_SIZE"

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
if [ -d "assets" ]; then
    echo "üì∏ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π..."
    tar -czf migration_assets_export.tar.gz assets/
    ASSETS_SIZE=\$(du -h migration_assets_export.tar.gz | cut -f1)
    echo "‚úÖ –ê—Ä—Ö–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω: \$ASSETS_SIZE"
else
    echo "‚ö†Ô∏è –ü–∞–ø–∫–∞ assets –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
tar -czf migration_config_export.tar.gz .env docker-compose.yml 2>/dev/null || echo "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
EOF

# –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –º–∞—à–∏–Ω—É
echo "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."
scp $OLD_SERVER_USER@$OLD_SERVER_HOST:$OLD_SERVER_PATH/migration_db_export.sql $TEMP_DIR/
echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∫–∞—á–∞–Ω–∞"

if ssh $OLD_SERVER_USER@$OLD_SERVER_HOST "[ -f $OLD_SERVER_PATH/migration_assets_export.tar.gz ]"; then
    scp $OLD_SERVER_USER@$OLD_SERVER_HOST:$OLD_SERVER_PATH/migration_assets_export.tar.gz $TEMP_DIR/
    echo "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–∞—á–∞–Ω—ã"
fi

if ssh $OLD_SERVER_USER@$OLD_SERVER_HOST "[ -f $OLD_SERVER_PATH/migration_config_export.tar.gz ]"; then
    scp $OLD_SERVER_USER@$OLD_SERVER_HOST:$OLD_SERVER_PATH/migration_config_export.tar.gz $TEMP_DIR/
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–∞—á–∞–Ω–∞"
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
echo "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä..."
scp $TEMP_DIR/* $NEW_SERVER_USER@$NEW_SERVER_HOST:$NEW_SERVER_PATH/
echo "‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä"

# –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –Ω–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ
echo "üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –Ω–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ..."
ssh $NEW_SERVER_USER@$NEW_SERVER_HOST << EOF
cd $NEW_SERVER_PATH

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo "‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞..."
docker-compose stop bot 2>/dev/null || echo "–ë–æ—Ç –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω
if ! docker-compose ps | grep -q "postgres.*Up"; then
    echo "üöÄ –ó–∞–ø—É—Å–∫ PostgreSQL..."
    docker-compose up -d postgres
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PostgreSQL..."
    sleep 30
fi

# –ò–º–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ò–º–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [ -f "migration_db_export.sql" ]; then
    # –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö (–∫—Ä–æ–º–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã)
    docker exec shawarma-postgres psql -U shawarma_user -d shawarma_db -c "
    TRUNCATE TABLE order_items, orders, cart_items, users RESTART IDENTITY CASCADE;
    " 2>/dev/null || echo "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

    # –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    docker exec -i shawarma-postgres psql -U shawarma_user -d shawarma_db < migration_db_export.sql

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞
    ORDERS_COUNT=\$(docker exec shawarma-postgres psql -U shawarma_user -d shawarma_db -t -c "SELECT COUNT(*) FROM orders;" | tr -d ' ')
    USERS_COUNT=\$(docker exec shawarma-postgres psql -U shawarma_user -d shawarma_db -t -c "SELECT COUNT(*) FROM users;" | tr -d ' ')
    echo "‚úÖ –ò–º–ø–æ—Ä—Ç –ë–î –∑–∞–≤–µ—Ä—à–µ–Ω: \$ORDERS_COUNT –∑–∞–∫–∞–∑–æ–≤, \$USERS_COUNT –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"

    rm migration_db_export.sql
else
    echo "‚ùå –§–∞–π–ª –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ò–º–ø–æ—Ä—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
if [ -f "migration_assets_export.tar.gz" ]; then
    echo "üì∏ –ò–º–ø–æ—Ä—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π..."

    # –ë—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    if [ -d "assets" ]; then
        tar -czf assets-backup-before-migration-\$(date +%Y%m%d_%H%M%S).tar.gz assets/
    fi

    # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    tar -xzf migration_assets_export.tar.gz
    chmod 644 assets/*.jpeg 2>/dev/null || true

    IMAGES_COUNT=\$(ls assets/*.jpeg 2>/dev/null | wc -l)
    echo "‚úÖ –ò–º–ø–æ—Ä—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω: \$IMAGES_COUNT —Ñ–∞–π–ª–æ–≤"

    rm migration_assets_export.tar.gz
else
    echo "‚ö†Ô∏è –ê—Ä—Ö–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if [ -f "migration_config_export.tar.gz" ]; then
    echo "‚öôÔ∏è –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

    # –ë—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [ -f ".env" ]; then
        cp .env .env.backup-\$(date +%Y%m%d_%H%M%S)
    fi

    # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ (—Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é)
    tar -xzf migration_config_export.tar.gz
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª)"

    rm migration_config_export.tar.gz
else
    echo "‚ö†Ô∏è –ê—Ä—Ö–∏–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
echo "üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
docker-compose up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
sleep 10
docker-compose ps
EOF

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å—Ç–∞—Ä–æ–º —Å–µ—Ä–≤–µ—Ä–µ
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
ssh $OLD_SERVER_USER@$OLD_SERVER_HOST "cd $OLD_SERVER_PATH && rm -f migration_*.sql migration_*.tar.gz"

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
rm -rf $TEMP_DIR
echo "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

echo ""
echo "üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –≤ Telegram"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: ssh $NEW_SERVER_USER@$NEW_SERVER_HOST 'cd $NEW_SERVER_PATH && docker-compose logs -f bot'"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ: ssh $NEW_SERVER_USER@$NEW_SERVER_HOST 'cd $NEW_SERVER_PATH && ./health-check.sh'"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é"
echo ""
echo "‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ:"
echo "1. –û–±–Ω–æ–≤–∏—Ç—å DNS –∑–∞–ø–∏—Å–∏ (–µ—Å–ª–∏ –º–µ–Ω—è–µ—Ç—Å—è –¥–æ–º–µ–Ω)"
echo "2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
echo "3. –û–±–Ω–æ–≤–∏—Ç—å webhook URL –±–æ—Ç–∞ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)"
echo "4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –±—ç–∫–∞–ø—ã"
