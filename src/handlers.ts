import { getMenuByCategory, getItemById } from "./menu";
import { BotInstance, BotMessage, BotCallbackQuery } from "./types";

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
export function handleStart(bot: BotInstance, msg: BotMessage): void {
  const chatId = msg.chat.id;
  const userName = msg.from?.first_name || "–î—Ä—É–≥";

  const welcomeMessage = `
ü•ô –ü—Ä–∏–≤–µ—Ç, ${userName}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –®–∞—É—Ä–º–∞ –ë–æ—Ç!

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–µ –º–µ–Ω—é –∏ –≤—ã–±—Ä–∞—Ç—å —á—Ç–æ-—Ç–æ –≤–∫—É—Å–Ω–æ–µ.

–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:
  `;

  const keyboard = {
    keyboard: [[{ text: "üåØ –®–∞—É—Ä–º–∞" }, { text: "ü•§ –ù–∞–ø–∏—Ç–∫–∏" }], [{ text: "‚ÑπÔ∏è –û –Ω–∞—Å" }]],
    resize_keyboard: true,
    one_time_keyboard: false,
  };

  bot.sendMessage(chatId, welcomeMessage, {
    reply_markup: keyboard,
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–®–∞—É—Ä–º–∞"
export function handleShawarmaMenu(bot: BotInstance, msg: BotMessage): void {
  const chatId = msg.chat.id;
  const items = getMenuByCategory("shawarma");

  let message = "üåØ –ù–∞—à–∞ —à–∞—É—Ä–º–∞:\n\n";

  const keyboard: Array<Array<{ text: string; callback_data: string }>> = [];

  items.forEach((item, index) => {
    message += `${index + 1}. ${item.name}\n`;
    message += `   üí∞ ${item.price} —Ä—É–±.\n`;
    message += `   üìù ${item.description}\n\n`;

    keyboard.push([
      {
        text: `${item.name} - ${item.price}‚ÇΩ`,
        callback_data: `item_${item.id}`,
      },
    ]);
  });

  keyboard.push([{ text: "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data: "back_to_menu" }]);

  bot.sendMessage(chatId, message, {
    reply_markup: { inline_keyboard: keyboard },
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ù–∞–ø–∏—Ç–∫–∏"
export function handleDrinksMenu(bot: BotInstance, msg: BotMessage): void {
  const chatId = msg.chat.id;
  const items = getMenuByCategory("drinks");

  let message = "ü•§ –ù–∞—à–∏ –Ω–∞–ø–∏—Ç–∫–∏:\n\n";

  const keyboard: Array<Array<{ text: string; callback_data: string }>> = [];

  items.forEach((item, index) => {
    message += `${index + 1}. ${item.name}\n`;
    message += `   üí∞ ${item.price} —Ä—É–±.\n`;
    message += `   üìù ${item.description}\n\n`;

    keyboard.push([
      {
        text: `${item.name} - ${item.price}‚ÇΩ`,
        callback_data: `item_${item.id}`,
      },
    ]);
  });

  keyboard.push([{ text: "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data: "back_to_menu" }]);

  bot.sendMessage(chatId, message, {
    reply_markup: { inline_keyboard: keyboard },
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–≤–µ–¥–µ–Ω–∏–∏
export function handleAbout(bot: BotInstance, msg: BotMessage): void {
  const chatId = msg.chat.id;

  const aboutMessage = `
‚ÑπÔ∏è –û –Ω–∞—Å:

üè™ –õ—É—á—à–∞—è —à–∞—É—Ä–º–∞ –≤ –≥–æ—Ä–æ–¥–µ!
üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 10:00 - 23:00
üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67
üìç –ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1

–≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è –±–æ—Ç–∞. –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤!
  `;

  bot.sendMessage(chatId, aboutMessage);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
export function handleItemSelection(bot: BotInstance, query: BotCallbackQuery): void {
  const chatId = query.message?.chat.id;
  const itemId = query.data?.replace("item_", "");

  if (!chatId || !itemId) {
    bot.answerCallbackQuery(query.id, { text: "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞" }).catch(() => {});
    return;
  }

  const item = getItemById(itemId);

  if (!item) {
    bot.answerCallbackQuery(query.id, { text: "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω" }).catch(() => {});
    return;
  }

  const message = `
‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏: ${item.name}

üí∞ –¶–µ–Ω–∞: ${item.price} —Ä—É–±.
üìù ${item.description}

–í –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É!
  `;

  const keyboard = {
    inline_keyboard: [[{ text: "üîô –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é", callback_data: "back_to_menu" }]],
  };

  if (query.message?.message_id) {
    bot
      .editMessageText(message, {
        chat_id: chatId,
        message_id: query.message.message_id,
        reply_markup: keyboard,
      })
      .catch(() => {});
  }

  bot.answerCallbackQuery(query.id, { text: `–í—ã–±—Ä–∞–Ω–æ: ${item.name}` }).catch(() => {});
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
export function handleBackToMenu(bot: BotInstance, query: BotCallbackQuery): void {
  const chatId = query.message?.chat.id;
  const userName = query.from?.first_name || "–î—Ä—É–≥";

  if (!chatId) {
    bot.answerCallbackQuery(query.id, { text: "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞" }).catch(() => {});
    return;
  }

  const welcomeMessage = `
ü•ô –ü—Ä–∏–≤–µ—Ç, ${userName}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –®–∞—É—Ä–º–∞ –ë–æ—Ç!

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–µ –º–µ–Ω—é –∏ –≤—ã–±—Ä–∞—Ç—å —á—Ç–æ-—Ç–æ –≤–∫—É—Å–Ω–æ–µ.

–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:
  `;

  if (query.message?.message_id) {
    bot
      .editMessageText(welcomeMessage, {
        chat_id: chatId,
        message_id: query.message.message_id,
      })
      .catch(() => {});
  }

  bot.answerCallbackQuery(query.id).catch(() => {});
}
